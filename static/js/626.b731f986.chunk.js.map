{"version":3,"file":"static/js/626.b731f986.chunk.js","mappings":"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","sources":["webpack://first-lesson/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://first-lesson/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://first-lesson/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/PorfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/WithAuthRedirect.js","utils/validators/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"posts__block\":\"MyPosts_posts__block__Rk1UU\",\"posts\":\"MyPosts_posts__GSiZ2\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\"};","import React from 'react';\nimport profileCss from './Post.module.css';\n\nconst Post = (props) => {\n    return(\n        <div className={profileCss.item}>\n            {props.text}\n            <div>\n                <span>{props.likesCount} like</span>\n            </div>\n        </div>       \n    );\n}\n\nexport default Post;","import React from 'react';\nimport { reduxForm } from 'redux-form';\nimport { required, maxLengthCreator, minLengthCreator } from './../../../../utils/validators/validators';\nimport { createField, textArea } from './../../../common/FormsControls/FormsControls';\n\nconst maxLength = maxLengthCreator(15);\nconst minLength = minLengthCreator(2);\n\nconst MyPostsForm = ({handleSubmit, onAddPost}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {createField(\"Post message\", \"newPostText\", [required, maxLength, minLength], textArea )}\n            <div>\n                <button onClick={onAddPost}>Add Post</button>\n                {/* <button onClick={onClickRemove}>Remove</button> */}\n            </div>\n        </form>\n    );\n}\n\nexport default reduxForm({\n    form: 'posts'\n})(MyPostsForm)","import React from 'react';\nimport postsCss from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport AddPostForm from './AddPostForm/AddPostForm';\n\n\nconst MyPosts = React.memo((props) => {\n\n    let postsElements = props.posts.map((p, index) => <Post key={index} text={p.postTxt} likesCount={p.likesCount} />);\n\n    function onAddPost(values) {\n        props.addPost(values.newPostText);\n        values.newPostText = '';\n    }\n\n    let onClickRemove = () => {\n        props.removeText();\n    }\n\n    return (\n        <div className={postsCss.posts__block}>\n            <h3> my posts</h3>\n            <AddPostForm onSubmit={onAddPost} />\n            <div className={postsCss.posts}>\n                {postsElements}\n            </div>\n        </div>\n    );\n})\n\nexport default MyPosts;","import React from 'react';\nimport MyPosts from './MyPosts';\nimport { addPostActionCreater, removeTextPostActionCreater } from './../../../redux/reduce-profile';\nimport {connect} from 'react-redux';\n\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newMessageBody) => {\n            dispatch(addPostActionCreater(newMessageBody));\n        },\n        removeText: () => {\n            dispatch(removeTextPostActionCreater());\n        }\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.postsData,\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"img__wrapper\":\"ProfileInfo_img__wrapper__yf0NH\",\"profile__img\":\"ProfileInfo_profile__img__HiOa4\",\"description__block\":\"ProfileInfo_description__block__8ados\"};","import React from 'react';\nimport Preloader from '../../common/Preloader/Preloader';\nimport profileInfoCss from './ProfileInfo.module.css';\n\nclass ProfileStatus extends React.Component {\n\n    state = {\n        editMode: false,\n        status: this.props.status,\n    }\n\n    activateEditMode = () => {\n        this.setState({\n            editMode: true,\n        })\n    }\n\n    deactivateEditMode = () => {\n        this.setState({\n            editMode: false,\n        })\n        this.props.updateStatus(this.state.status);\n    }\n\n    statusOnChange = (e) => {\n        this.setState({\n            status: e.currentTarget.value,\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.status !== this.props.status) {\n            this.setState({\n                status: this.props.status,\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {!this.state.editMode &&\n                    <div>\n                        <span onDoubleClick = {this.activateEditMode}>{this.props.status || 'Default'}</span>\n                    </div>\n                }\n                {this.state.editMode &&\n                    <div>\n                        <input onChange={this.statusOnChange} autoFocus={true} onBlur={  this.deactivateEditMode } value={this.state.status} />\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default ProfileStatus;","import React, {useEffect} from 'react';\nimport Preloader from '../../common/Preloader/Preloader';\nimport profileInfoCss from './ProfileInfo.module.css';\n\nconst ProfileStatusWithHooks = (props) => {\n\n    const [editMode, setEditMode] = React.useState(false);\n    const [status, setStatus] = React.useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status] );\n\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n    \n    const statusOnChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n    return (\n        <div>\n            { !editMode &&\n                <div>\n                    <span onDoubleClick={activateEditMode}>{props.status || 'Default'}</span>\n                </div>\n            }\n            { editMode &&\n                <div>\n                    <input onChange={statusOnChange} onBlur={deactivateEditMode} autoFocus={true} value={status} />\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport Preloader from '../../common/Preloader/Preloader';\nimport profileInfoCss from './ProfileInfo.module.css';\nimport ProfileStatus from \"./ProfileStatus\";\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\n\nconst ProfileInfo = ({profile, updateStatus, status}) => {\n    if(!profile) {\n        return <Preloader />\n    }\n    return(\n        <div>\n            <div className={profileInfoCss.img__wrapper}>\n                <img className={profileInfoCss.profile__img} src={profile.photos.large || \"https://images.pexels.com/photos/268533/pexels-photo-268533.jpeg?cs=srgb&dl=pexels-pixabay-268533.jpg&fm=jpg\"} alt=\"profile-img\"/>\n            </div>\n            <div className={profileInfoCss.description__block}>\n                {profile.aboutMe}\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n            </div>\n        </div>\n    );\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport profileCss from './Profile.module.css';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProfileInfo/PorfileInfo';\n\nconst MainContent = (props) => {\n    return(\n        <div>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\n            <MyPostsContainer/>\n        </div> \n    );\n}\n\nexport default MainContent;\n","import React from \"react\";\nimport MainContent from \"./Profile\";\nimport { getAndSetUserProfile, getStatus, updateStatus } from \"../../redux/reduce-profile\";\nimport { connect } from 'react-redux';\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { withAuthRedirect } from \"../../hoc/WithAuthRedirect\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.router.params.userId;\n        if(!userId) {\n            userId = this.props.authorizedUserId;\n            if(!userId) {\n                this.props.router.navigate('/login');\n            }\n        }\n        this.props.getAndSetUserProfile(userId);\n        this.props.getStatus(userId);\n\n    }\n\n    render() {\n\n        return (\n            <MainContent {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\n        )\n\n    };\n\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        status : state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    }\n}\n\nfunction withRouter(Component) {\n    function ComponentWithRouterProp(props) {\n        let location = useLocation();\n        let navigate = useNavigate();\n        let params = useParams();\n        return (\n            <Component\n                {...props}\n                router={{ location, navigate, params }}\n            />\n        );\n    }\n\n    return ComponentWithRouterProp;\n}\n\nexport default compose(connect(mapStateToProps, {\n    getAndSetUserProfile, getStatus, updateStatus\n}), withRouter, withAuthRedirect)(ProfileContainer);","import React, { Component } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\nlet mapStateToPropsForRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth,\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n\n        render() {\n\n            if (!this.props.isAuth) return <Navigate to=\"/login\" />\n\n            return <Component {...this.props} />\n\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent;\n\n}","export const required = (value) => {\n    if (value) return undefined;\n\n    return 'Field is required';\n}\n\nexport const maxLengthCreator = ( maxLength ) => (value) => {\n\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n\n    return undefined;\n\n} \n\nexport const minLengthCreator = ( minLength) => (value) => {\n\n    if (value.length < minLength) return `Min length is ${minLength} symbols`;\n\n    return undefined;\n\n}"],"names":["props","className","profileCss","text","likesCount","maxLength","maxLengthCreator","minLength","minLengthCreator","reduxForm","form","handleSubmit","onAddPost","onSubmit","createField","required","textArea","onClick","React","postsElements","posts","map","p","index","postTxt","postsCss","AddPostForm","values","addPost","newPostText","connect","state","profilePage","postsData","dispatch","newMessageBody","addPostActionCreater","removeText","removeTextPostActionCreater","MyPosts","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","profile","profileInfoCss","src","photos","large","alt","aboutMe","Preloader","ProfileContainer","userId","this","router","params","authorizedUserId","navigate","getAndSetUserProfile","getStatus","compose","auth","isAuth","Component","location","useLocation","useNavigate","useParams","withAuthRedirect","mapStateToPropsForRedirect","RedirectComponent","to","length"],"sourceRoot":""}