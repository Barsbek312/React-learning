{"version":3,"file":"static/js/666.1edf3a81.chunk.js","mappings":"sRAMMA,GAAcC,EAAAA,EAAAA,IAAiB,IAC/BC,GAAaC,EAAAA,EAAAA,IAAiB,GAyBpC,GAAeC,EAAAA,EAAAA,GAAU,CACrBC,KAAM,SADV,EAvBkB,SAAH,GAA+B,IAA1BC,EAAY,EAAZA,aAAcC,EAAK,EAALA,MAE9B,OAEI,kBAAMC,SAAUF,EAAa,WAExBG,EAAAA,EAAAA,IAAY,QAAS,QAAS,CAACC,EAAAA,GAAUV,EAAaE,GAAaS,EAAAA,KACnEF,EAAAA,EAAAA,IAAY,WAAY,WAAY,CAACC,EAAAA,GAAUV,EAAaE,GAAaS,EAAAA,GAAO,CAACC,KAAM,cACvFH,EAAAA,EAAAA,IAAY,KAAM,aAAc,GAAIE,EAAAA,GAAO,CAACC,KAAM,YAAa,eAE/DL,IAAS,gBAAKM,UAAWC,EAAAA,EAAAA,oBAA0B,SAC/CP,KAGL,0BACI,4BAAQ,cAMxB,I,UCJA,EArBc,SAACQ,GAMX,OAAGA,EAAMC,QACE,SAAC,KAAQ,CAACC,GAAI,cAIrB,4BAEI,wBAAI,WAEJ,SAAC,EAAS,CAACT,SAbF,SAACU,GACdH,EAAMI,MAAMD,EAAKC,MAAOD,EAAKE,SAAUF,EAAKG,WAChD,MAeJ,E,UClBMC,EAAc,qGAMX,OANW,8BAEZ,WACI,OACI,SAAC,GAAK,UAAKC,KAAKR,OAExB,KAAC,EANW,CAASS,EAAAA,WAc7B,GAAeC,EAAAA,EAAAA,KAJS,SAACC,GAAK,MAAM,CAChCV,OAAQU,EAAMC,KAAKX,OACtB,GAEuC,CAAEG,MAAAA,EAAAA,GAAOS,OAAAA,EAAAA,IAAjD,CAA2DN,E,wGCpBpD,IAAMZ,EAAW,SAACmB,GACrB,IAAIA,EAEJ,MAAO,mBACX,EAEa5B,EAAmB,SAAE6B,GAAS,OAAM,SAACD,GAE9C,GAAIA,EAAME,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAS,WAInE,CAAC,EAEY3B,EAAmB,SAAE6B,GAAS,OAAK,SAACH,GAE7C,GAAIA,EAAME,OAASC,EAAW,MAAM,iBAAN,OAAwBA,EAAS,WAInE,CAAC,C","sources":["components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","utils/validators/validators.js"],"sourcesContent":["import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, minLengthCreator, required } from \"../../../utils/validators/validators\";\nimport { FormControl, Input, createField } from \"./../../common/FormsControls/FormsControls\";\nimport style from \"./../../common/FormsControls/FormsControls.module.css\";\n\nconst maxLength30 = maxLengthCreator(30);\nconst minLength2 = minLengthCreator(2);\n\nconst LoginForm = ({handleSubmit, error}) => {\n    \n    return (\n    \n        <form onSubmit={handleSubmit}>\n\n            {createField(\"Login\", \"login\", [required, maxLength30, minLength2], Input)}\n            {createField(\"Password\", \"password\", [required, maxLength30, minLength2], Input, {type: \"password\"})}\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\n\n            {error && <div className={style.form__summary_error}>\n                {error}\n            </div>}\n\n            <div>\n                <button>Login</button>\n            </div>\n\n        </form>\n\n    );\n};\n\nexport default reduxForm({\n    form: 'login'\n})(LoginForm);","import React from \"react\";\nimport LoginForm from \"./LoginForm/LoginForm\";\nimport { Navigate } from \"react-router-dom\";\n\n\nconst Login = (props) => {\n    \n    const onSubmit = (data) => {\n        props.login(data.login, data.password, data.rememberMe);\n    }\n\n    if(props.isAuth) {\n        return <Navigate to={\"/profile\"} />\n    }\n    \n    return (\n        <div>\n\n            <h1>Login</h1>\n\n            <LoginForm onSubmit={onSubmit}/>\n\n        </div>\n    );\n}\n\nexport default Login;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Login from './Login';\nimport { login, logout } from '../../redux/auth-reducer';\n\n\nclass LoginContainer extends React.Component {\n    \n        render() {\n            return (\n                <Login {...this.props}/>\n            );\n        }\n    \n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, { login, logout })(LoginContainer);\n","export const required = (value) => {\n    if (value) return undefined;\n\n    return 'Field is required';\n}\n\nexport const maxLengthCreator = ( maxLength ) => (value) => {\n\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n\n    return undefined;\n\n} \n\nexport const minLengthCreator = ( minLength) => (value) => {\n\n    if (value.length < minLength) return `Min length is ${minLength} symbols`;\n\n    return undefined;\n\n}"],"names":["maxLength30","maxLengthCreator","minLength2","minLengthCreator","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","type","className","style","props","isAuth","to","data","login","password","rememberMe","LoginContainer","this","React","connect","state","auth","logout","value","maxLength","length","minLength"],"sourceRoot":""}