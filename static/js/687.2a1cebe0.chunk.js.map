{"version":3,"file":"static/js/687.2a1cebe0.chunk.js","mappings":"oLACA,EAA0B,yBAA1B,EAAoE,gCAApE,EAA+G,0B,UCA/G,GAAgB,OAAS,2BAA2B,OAAS,4B,SCW7D,EARmB,SAACA,GAChB,OACI,gBAAKC,UAAWC,EAAAA,OAAuB,IAAMA,EAAAA,OAAqB,UAC9D,SAAC,KAAO,CAACD,UAAW,SAAAE,GAAO,OAAIA,EAAQC,SAAWF,EAAAA,OAAuBA,EAAAA,YAA0B,EAAEG,GAAE,mBAAcL,EAAMM,UAAW,SAAEN,EAAMO,QAG1J,ECTA,EAA0B,yBCU1B,EARgB,SAACP,GACb,OACI,gBAAKC,UAAWO,EAAmB,SAC9BR,EAAMS,SAGnB,E,6BCJMC,GAAYC,EAAAA,EAAAA,IAAiB,IAC7BC,GAAYC,EAAAA,EAAAA,IAAiB,GAenC,GAAeC,EAAAA,EAAAA,GAAU,CACrBC,KAAM,WADV,EAbuB,SAAH,GAAwB,IAAnBC,EAAY,EAAZA,aAErB,OACI,kBAAMC,SAAUD,EAAa,WACxBE,EAAAA,EAAAA,IAAY,qBAAsB,iBAAkB,CAACC,EAAAA,GAAUT,EAAWE,GAAYQ,EAAAA,KACvF,0BACI,4BAAQ,oBAKxB,ICmBA,EA/BgB,SAACpB,GAEb,IAAIqB,EAAQrB,EAAMsB,YAEdC,EAAkBF,EAAMG,YACvBC,KAAI,SAACC,EAAGC,GAAK,OAAK,SAAC,EAAU,CAAarB,SAAUoB,EAAEE,GAAIrB,KAAMmB,EAAEnB,MAA/BoB,EAAuC,IAE3EE,EAAmBR,EAAMS,aACxBL,KAAI,SAACM,EAAGJ,GAAK,OAAK,SAAC,EAAO,CAAalB,QAASsB,EAAEtB,SAAlBkB,EAA6B,IAQlE,OACI,iBAAK1B,UAAW+B,EAAmB,WAC/B,gBAAK/B,UAAW+B,EAA0B,SACrCT,KAEL,iBAAKtB,UAAW+B,EAAoB,WAChC,yBAAMH,KACN,SAAC,GAAc,QAACZ,SAbN,SAACgB,GACnBjC,EAAMkC,WAAWD,EAAOE,gBACxBF,EAAOE,eAAiB,EAC5B,GAU0DnC,SAK9D,E,8BCXA,GAAeoC,E,QAAAA,KAAQC,EAAAA,EAAAA,KAjBD,SAAChB,GAEnB,MAAO,CACHC,YAAaD,EAAMiB,aAG3B,IAEyB,SAACC,GACtB,MAAO,CACHL,WAAY,SAACM,GACTD,GAASE,EAAAA,EAAAA,GAAwBD,GACrC,EAER,IAGqEE,EAAAA,EAArE,CAAuFC,E,kJCpBnFC,EAA6B,SAACvB,GAC9B,MAAO,CACHwB,OAAQxB,EAAMyB,KAAKD,OAE3B,EAEaH,EAAmB,SAACK,GAAe,IAEtCC,EAAiB,qGAQlB,OARkB,8BAEnB,WAEI,OAAKC,KAAKjD,MAAM6C,QAET,SAACE,GAAS,UAAKE,KAAKjD,SAFI,SAAC,KAAQ,CAACK,GAAG,UAIhD,KAAC,EARkB,CAAS6C,EAAAA,WAahC,OAFqCb,EAAAA,EAAAA,IAAQO,EAARP,CAAoCW,EAI7E,C,wGC3BO,IAAM7B,EAAW,SAACgC,GACrB,IAAIA,EAEJ,MAAO,mBACX,EAEaxC,EAAmB,SAAED,GAAS,OAAM,SAACyC,GAE9C,GAAIA,EAAMC,OAAS1C,EAAW,MAAM,iBAAN,OAAwBA,EAAS,WAInE,CAAC,EAEYG,EAAmB,SAAED,GAAS,OAAK,SAACuC,GAE7C,GAAIA,EAAMC,OAASxC,EAAW,MAAM,iBAAN,OAAwBA,EAAS,WAInE,CAAC,C","sources":["webpack://first-lesson/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://first-lesson/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","webpack://first-lesson/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/WithAuthRedirect.js","utils/validators/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogs__items\":\"Dialogs_dialogs__items__+PnPC\",\"messages\":\"Dialogs_messages__Cg2l+\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__gU34-\",\"active\":\"DialogItem_active__wvgh9\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport dialogItemCss from './DialogItem.module.css';\n\nconst DialogItem = (props) => {\n    return (\n        <div className={dialogItemCss.dialog + ' ' + dialogItemCss.active}>\n            <NavLink className={navData => navData.isActive ? dialogItemCss.active : dialogItemCss.dialog__item} to={`/dialogs/${props.idDialog}`}>{props.name}</NavLink>\n        </div>\n    );\n}\n\nexport default DialogItem;","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__rjHQQ\"};","import React from 'react';\nimport messageCss from './Message.module.css';\n\nconst Message = (props) => {\n    return (\n        <div className={messageCss.message}>\n            {props.message}\n        </div>\n    );\n}\n\nexport default Message;","import React from 'react'\nimport { reduxForm } from 'redux-form';\nimport { maxLengthCreator, minLengthCreator, required } from '../../../utils/validators/validators';\nimport { createField, textArea } from './../../common/FormsControls/FormsControls';\n\nconst maxLength = maxLengthCreator(50);\nconst minLength = minLengthCreator(2);\n\nconst AddMessageForm = ({handleSubmit}) => {\n    \n    return (\n        <form onSubmit={handleSubmit}>\n            {createField(\"Enter your message\", \"newMessageText\", [required, maxLength, minLength], textArea)}\n            <div>\n                <button>Add message</button>\n            </div>\n        </form>\n    )\n    \n}\n\nexport default reduxForm({\n    form: 'dialogs'\n})(AddMessageForm)","import React from 'react';\nimport dialogsCss from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\n\n\nconst Dialogs = (props) => {\n\n    let state = props.dialogsPage\n\n    let dialogsElements = state.dialogsData\n        .map((d, index) => <DialogItem key={index} idDialog={d.id} name={d.name} />)\n\n    let messagesElements = state.messagesData\n        .map((m, index) => <Message key={index} message={m.message} />)\n\n    const addNewMessage = (values) => {\n        props.addMessage(values.newMessageText);\n        values.newMessageText = '';\n    }\n\n\n    return (\n        <div className={dialogsCss.dialogs}>\n            <div className={dialogsCss.dialogs__items}>\n                {dialogsElements}\n            </div>\n            <div className={dialogsCss.messages}>\n                <div>{messagesElements}</div>\n                <AddMessageForm onSubmit={addNewMessage} { ...props }/>  \n            </div>\n        </div>\n    );\n\n}\n\n\nexport default Dialogs;","import React from 'react';\nimport Dialogs from './Dialogs';\nimport { addMessageActionCreater } from '../../redux/reduce-message';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect';\nimport { compose } from 'redux';\n\nlet mapStateToProps = (state) => {\n\n    return {\n        dialogsPage: state.messagesPage,\n    }\n    \n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addMessage: (newMessageBody) => {\n            dispatch(addMessageActionCreater(newMessageBody));\n        }\n    }\n}\n\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);","import React, { Component } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\nlet mapStateToPropsForRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth,\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n\n        render() {\n\n            if (!this.props.isAuth) return <Navigate to=\"/login\" />\n\n            return <Component {...this.props} />\n\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent;\n\n}","export const required = (value) => {\n    if (value) return undefined;\n\n    return 'Field is required';\n}\n\nexport const maxLengthCreator = ( maxLength ) => (value) => {\n\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n\n    return undefined;\n\n} \n\nexport const minLengthCreator = ( minLength) => (value) => {\n\n    if (value.length < minLength) return `Min length is ${minLength} symbols`;\n\n    return undefined;\n\n}"],"names":["props","className","dialogItemCss","navData","isActive","to","idDialog","name","messageCss","message","maxLength","maxLengthCreator","minLength","minLengthCreator","reduxForm","form","handleSubmit","onSubmit","createField","required","textArea","state","dialogsPage","dialogsElements","dialogsData","map","d","index","id","messagesElements","messagesData","m","dialogsCss","values","addMessage","newMessageText","compose","connect","messagesPage","dispatch","newMessageBody","addMessageActionCreater","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","React","value","length"],"sourceRoot":""}